1) Можно ли добавить больше паттернов проектирования и нужны ли они вообще в данном проекте?
Паттерны, которые я знаю: Service-object, Value object, Presenter, Decorator, Form object, Query object

2) Нужно ли было декомпозировать сервис управления билетами сильнее, выделяя сервис пользователей и сервис бронирования?

3) Грамотно ли сделан сервис API_Gateway как его можно переделать и улучшить? Какие технологии использовать (возможно nginx)?

4) Грамотно ли сделана обработка очереди с помощью сервиса асинхронных задач? Что можно улучшить в нём?
Стоило ли выделять обработку очереди в отдельный сервис?

5) Стоило ли везде добавлять Result = Struct.new(:success?, :message, :errors)? Есть решение лучше? Сериализатор?
Можно ли сказать что сериализатор это паттерн проектирования Value object или Form object, или подобный им?

6) Стоило ли выделить какие-то действия из Service в Model?

7) С помощью каких технологий можно упростить взаимодействие с docker контейнерами?
Допустимо ли реализовывать так, как сделано в проекте? (через docker-compose.yml)
